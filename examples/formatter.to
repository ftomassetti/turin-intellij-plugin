namespace me.tomassetti.javaformatter

import java.lang.System.out.println as print
import java.lang.System.err.println as eprint
import com.github.javaparser.ast.CompilationUnit
import com.github.javaparser.JavaParser
import java.io.*

Void fatalError(String msg) {
	eprint(msg)
	System.exit(1)
}

CompilationUnit parse(String path) {
	//throw UnsupportedOperationException("To be implemented")
	return JavaParser.parse(File(path))
}

String format(CompilationUnit cu) {
	val sw = StringWriter()
 	val pw = PrintWriter(sw)

 	pw.print(cu)

 	return sw.toString()
}

program JavaFormatter(String[] args) {
	val debug = true
	print("Java Formatter v0.1")
	if args.length != 1 {
		fatalError("pass exactly one parameter")
	}
	try {
		val cu = parse(args[0])
		if debug {
			print("Parsed correctly")
		}
		print("OUTPUT:")
		print(format(cu))
	} catch Exception e {
		fatalError("Issue parsing #{args[0]}: #{e.getMessage()}")
	}
}
